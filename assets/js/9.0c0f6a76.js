(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{212:function(t,a,s){"use strict";s.r(a);var n=s(17),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jsvascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsvascript"}},[t._v("#")]),t._v(" JsvaScript")]),t._v(" "),s("h2",{attrs:{id:"javascript是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript是什么"}},[t._v("#")]),t._v(" JavaScript是什么")]),t._v(" "),s("p",[t._v("Netscape在最初将其脚本语言命名为LiveScript,后来Netscape在与Sun合作之后将其改名为JavaScript。\nJavaScript最初受Java启发而开始设计的,目的之一就是“看上去像Java”,因此语法上有类似之处,一些名称和命名规范也借自Java。\nJavaScript与Java名称上的近似,是当时Netscape为了营销考虑与Sun微系统达成协议的结果.\nJavaScript与Java没有任关系")]),t._v(" "),s("p",[t._v("JavaScript是一种运行在客户端的脚本语言\nJavaScript的解释器被称为JavaScript引擎,为浏览器的一部分,广泛用于客户端的脚本语言,\n最早是在HTML（标准通用标记语言下的一个应用）网页上使用,用来给HTML网页增加动态功能")]),t._v(" "),s("h2",{attrs:{id:"javascript最初的目的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript最初的目的"}},[t._v("#")]),t._v(" JavaScript最初的目的")]),t._v(" "),s("p",[t._v("最初的目的是为了处理表单的验证操作和操作页面上的元素")]),t._v(" "),s("h2",{attrs:{id:"javascript现在的意义-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript现在的意义-应用场景"}},[t._v("#")]),t._v(" JavaScript现在的意义(应用场景)")]),t._v(" "),s("ol",[s("li",[t._v("网页特效")]),t._v(" "),s("li",[t._v("服务端开发(Node.js)")]),t._v(" "),s("li",[t._v("命令行工具(Node.js)")]),t._v(" "),s("li",[t._v("桌面程序(Electron)")]),t._v(" "),s("li",[t._v("App(Cordova)")]),t._v(" "),s("li",[t._v("控制硬件-物联网(Ruff)")]),t._v(" "),s("li",[t._v("游戏开发(cocos2d-js)")])]),t._v(" "),s("h2",{attrs:{id:"javascript和html、css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript和html、css"}},[t._v("#")]),t._v(" JavaScript和HTML、CSS")]),t._v(" "),s("ol",[s("li",[t._v("HTML：提供网页的结构,提供网页中的内容")]),t._v(" "),s("li",[t._v("CSS: 用来美化网页")]),t._v(" "),s("li",[t._v("JavaScript: 可以用来控制网页内容,给网页增加动态的效果")])]),t._v(" "),s("h2",{attrs:{id:"javascript的组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript的组成"}},[t._v("#")]),t._v(" JavaScript的组成")]),t._v(" "),s("h3",{attrs:{id:"ecmascript-javascript的核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-javascript的核心"}},[t._v("#")]),t._v(" ECMAScript - JavaScript的核心")]),t._v(" "),s("ul",[s("li",[t._v("ECMA 欧洲计算机制造联合会")]),t._v(" "),s("li",[t._v("网景：JavaScript")]),t._v(" "),s("li",[t._v("微软：JScript")]),t._v(" "),s("li",[t._v("定义了JavaScript的语法规范")]),t._v(" "),s("li",[t._v("JavaScript的核心,描述了语言的基本语法和数据类型,ECMAScript是一套标准,定义了一种语言的标准与具体实现无关")])]),t._v(" "),s("h3",{attrs:{id:"bom-浏览器对象模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom-浏览器对象模型"}},[t._v("#")]),t._v(" BOM - 浏览器对象模型")]),t._v(" "),s("p",[t._v("一套操作浏览器功能的API\n通过BOM可以操作浏览器窗口,比如：弹出框、控制浏览器跳转、获取分辨率等")]),t._v(" "),s("h3",{attrs:{id:"dom-文档对象模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档对象模型"}},[t._v("#")]),t._v(" DOM - 文档对象模型")]),t._v(" "),s("p",[t._v("一套操作页面元素的API\nDOM可以把HTML看做是文档树,通过DOM提供的API可以对树上的节点进行操作")]),t._v(" "),s("h2",{attrs:{id:"javascript初体验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript初体验"}},[t._v("#")]),t._v(" JavaScript初体验")]),t._v(" "),s("h3",{attrs:{id:"javascript的书写位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript的书写位置"}},[t._v("#")]),t._v(" JavaScript的书写位置")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("写在行内\n"),s("code",[t._v('<input type="button" value="按钮" onclick="alert(\'Hello World\')" />')])])]),t._v(" "),s("li",[s("p",[t._v("写在script标签中")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n")])])]),s("ul",[s("li",[t._v("写在外部js文件中,在页面引入"),s("br"),t._v(" "),s("code",[t._v('<script src="main.js"><\/script>')]),s("br"),t._v("\n引用外部js文件的script标签中不可以写JavaScript代码")])]),t._v(" "),s("h2",{attrs:{id:"常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("console.log()")]),t._v("在浏览器控制台当中打印")]),t._v(" "),s("li",[s("code",[t._v("alert()")]),t._v("  浏览器弹框提示")]),t._v(" "),s("li",[s("code",[t._v("document.write()")]),t._v(" 在网页中写入内容")]),t._v(" "),s("li",[s("code",[t._v("prompt()")]),t._v("  给用户提示输入")])]),t._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("h3",{attrs:{id:"什么是变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是变量"}},[t._v("#")]),t._v(" 什么是变量")]),t._v(" "),s("p",[t._v("变量是计算机内存中存储数据的标识符,根据变量名称可以获取到内存中存储的数据")]),t._v(" "),s("h3",{attrs:{id:"为什么要使用变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用变量"}},[t._v("#")]),t._v(" 为什么要使用变量")]),t._v(" "),s("p",[t._v("使用变量可以方便的获取或者修改内存中的数据")]),t._v(" "),s("h3",{attrs:{id:"如何使用变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用变量"}},[t._v("#")]),t._v(" 如何使用变量")]),t._v(" "),s("ul",[s("li",[t._v("var声明变量\n"),s("code",[t._v("var age")])]),t._v(" "),s("li",[t._v("变量的赋值")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age\nage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n  或者\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("\n")])])]),s("ul",[s("li",[t._v("同时声明多个变量")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("同时声明多个变量并赋值")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n或者\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zs'")]),t._v("\n")])])]),s("h3",{attrs:{id:"变量的命名规则和规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的命名规则和规范"}},[t._v("#")]),t._v(" 变量的命名规则和规范")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("规则 - 必须遵守的,不遵守会报错")])]),t._v(" "),s("li",[s("p",[t._v("由字母、数字、下划线、$符号组成,不能以数字开头")])]),t._v(" "),s("li",[s("p",[t._v("不能是关键字和保留字,例如：for、while。")])]),t._v(" "),s("li",[s("p",[t._v("区分大小写")])]),t._v(" "),s("li",[s("p",[t._v("规范 - 建议遵守的,不遵守不会报错")])]),t._v(" "),s("li",[s("p",[t._v("变量名必须有意义")])]),t._v(" "),s("li",[s("p",[t._v("遵守驼峰命名法。首字母小写,后面单词的首字母需要大写。例如：userName、userPassword")])]),t._v(" "),s("li",[s("p",[t._v("下面哪些变量名不合法")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("a\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nage18\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("age\nname\n$name\n_sex\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("sex\ntheworld\ntheWorld\n")])])]),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("h3",{attrs:{id:"简单-基本-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单-基本-数据类型"}},[t._v("#")]),t._v(" 简单(基本)数据类型")]),t._v(" "),s("p",[t._v("Number、String、Boolean、Undefined、Null,Symbol")]),t._v(" "),s("h3",{attrs:{id:"number类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number类型"}},[t._v("#")]),t._v(" Number类型")]),t._v(" "),s("p",[t._v("数值字面量：数值的固定值的表示法")]),t._v(" "),s("ul",[s("li",[t._v("十进制\n"),s("code",[t._v("var num = 9;")]),t._v("\n进行算数计算时,八进制和十六进制表示的数值最终都将被转换成十进制数值。")]),t._v(" "),s("li",[t._v("十六进制\n"),s("code",[t._v("var num = 0xA;")]),t._v("\n数字序列范围：0~9以及A~F")]),t._v(" "),s("li",[t._v("八进制")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    对应十进制的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("019")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   对应十进制的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    对应十进制的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n")])])]),s("p",[t._v("数字序列范围：0~7"),s("br"),t._v("\n如果字面值中的数值超出了范围,那么前导零将被忽略,后面的数值将被当作十进制数值解析")]),t._v(" "),s("h3",{attrs:{id:"浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[t._v("#")]),t._v(" 浮点数")]),t._v(" "),s("p",[t._v("浮点数\n"),s("code",[t._v("var n = 5e-324; 科学计数法 5乘以10的-324次方")]),s("br"),t._v("\n浮点数值的最高精度是 17 位小数,但在进行算术计算时其精确度远远不如整数"),s("br"),t._v(" "),s("code",[t._v("var result = 0.1 + 0.2; 结果不是 0.3,而是：0.30000000000000004")]),s("br"),t._v(" "),s("code",[t._v("console.log(0.07 * 100);")]),s("br"),t._v("\n不要判断两个浮点数是否相等")]),t._v(" "),s("h3",{attrs:{id:"数值范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值范围"}},[t._v("#")]),t._v(" 数值范围")]),t._v(" "),s("ul",[s("li",[t._v("最小值：Number.MIN_VALUE,这个值为： 5e-324")]),t._v(" "),s("li",[t._v("最大值：Number.MAX_VALUE,这个值为： 1.7976931348623157e+308")]),t._v(" "),s("li",[t._v("无穷大：Infinity")]),t._v(" "),s("li",[t._v("无穷小：-Infinity")])]),t._v(" "),s("h3",{attrs:{id:"数值判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值判断"}},[t._v("#")]),t._v(" 数值判断")]),t._v(" "),s("ul",[s("li",[t._v("NaN：not a number")]),t._v(" "),s("li",[t._v("NaN 与任何值都不相等,包括他本身")]),t._v(" "),s("li",[t._v("isNaN: is not a number")])]),t._v(" "),s("h3",{attrs:{id:"string类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string类型"}},[t._v("#")]),t._v(" String类型")]),t._v(" "),s("p",[t._v("'abc'   \"abc\"")]),t._v(" "),s("ul",[s("li",[t._v("字符串字面量\n"),s("code",[t._v("var str = 'abc'")])])]),t._v(" "),s("h4",{attrs:{id:"字符串长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串长度"}},[t._v("#")]),t._v(" 字符串长度")]),t._v(" "),s("p",[t._v("length属性用来获取字符串的长度")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"字符串拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串拼接"}},[t._v("#")]),t._v(" 字符串拼接")]),t._v(" "),s("p",[t._v("字符串拼接使用 + 连接")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'male:'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("两边只要有一个是字符串,那么+就是字符串拼接功能")]),t._v(" "),s("li",[t._v("两边如果都是数字,那么就是算术功能")])]),t._v(" "),s("h3",{attrs:{id:"boolean类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean类型"}},[t._v("#")]),t._v(" Boolean类型")]),t._v(" "),s("ul",[s("li",[t._v("Boolean字面量：  true和false,区分大小写")]),t._v(" "),s("li",[t._v("计算机内部存储：true为1,false为0")])]),t._v(" "),s("h3",{attrs:{id:"undefined和null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined和null"}},[t._v("#")]),t._v(" Undefined和Null")]),t._v(" "),s("ol",[s("li",[t._v("undefined表示一个声明了没有赋值的变量,变量只声明的时候值默认是undefined")]),t._v(" "),s("li",[t._v("null表示一个空,变量的值如果想为null,必须手动设置")])]),t._v(" "),s("h3",{attrs:{id:"复杂数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂数据类型"}},[t._v("#")]),t._v(" 复杂数据类型")]),t._v(" "),s("p",[t._v("Object")]),t._v(" "),s("h3",{attrs:{id:"获取变量的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取变量的类型"}},[t._v("#")]),t._v(" 获取变量的类型")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),t._v("\n")])])]),s("h3",{attrs:{id:"字面量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[t._v("#")]),t._v(" 字面量")]),t._v(" "),s("p",[t._v("在源代码中一个固定值的表示法。")]),t._v(" "),s("ul",[s("li",[t._v("数值字面量：8, 9, 10")]),t._v(" "),s("li",[t._v("字符串字面量：'课得在线', \"大前端\"")]),t._v(" "),s("li",[t._v("布尔字面量：true,false")])]),t._v(" "),s("h3",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("单行注释\n用来描述下面一个或多行代码的作用\n这是一个变量\n"),s("code",[t._v("var name = 'hm';")])])]),t._v(" "),s("li",[s("p",[t._v("多行注释\n用来注释多条代码")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\nvar age = 18;\nvar name = 'zs';\nconsole.log(name, age);\n*/")]),t._v("\n")])])]),s("h3",{attrs:{id:"数据类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[t._v("#")]),t._v(" 数据类型转换")]),t._v(" "),s("h4",{attrs:{id:"转换成字符串类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换成字符串类型"}},[t._v("#")]),t._v(" 转换成字符串类型")]),t._v(" "),s("ul",[s("li",[t._v("toString()")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("String()"),s("br"),t._v(" "),s("code",[t._v("String()")]),t._v("函数存在的意义：有些值没有"),s("code",[t._v("toString()")]),t._v(",这个时候可以使用"),s("code",[t._v("String()")]),t._v("。比如："),s("code",[t._v("undefined和null")])])]),t._v(" "),s("li",[s("p",[t._v("拼接字符串方式\n"),s("code",[t._v('num + ""')]),t._v(",当 + 两边一个操作符是字符串类型,一个操作符是其它类型的时候,会先把其它类型转换成字符串再进行字符串拼接,返回字符串")])])]),t._v(" "),s("h4",{attrs:{id:"转换成数值类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换成数值类型"}},[t._v("#")]),t._v(" 转换成数值类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Number()"),s("br"),t._v(" "),s("code",[t._v("Number()")]),t._v("可以把任意值转换成数值,如果要转换的字符串中有一个不是数值的字符,返回NaN")])]),t._v(" "),s("li",[s("p",[t._v("parseInt()"),s("br"),t._v(" "),s("code",[t._v('var num1 = parseInt("12.3abc"); 返回12,如果第一个字符是数字会解析知道遇到非数字结束')]),s("br"),t._v(" "),s("code",[t._v('var num2 = parseInt("abc123"); 返回NaN,如果第一个字符不是数字或者符号就返回NaN')])])]),t._v(" "),s("li",[s("p",[t._v("parseFloat()")]),t._v(" "),s("ul",[s("li",[t._v("parseFloat()把字符串转换成浮点数")]),t._v(" "),s("li",[t._v("parseFloat()和parseInt非常相似,不同之处在与")]),t._v(" "),s("li",[t._v("parseFloat会解析第一个. 遇到第二个.或者非数字结束")]),t._v(" "),s("li",[t._v("如果解析的内容里只有整数,解析成整数")])])]),t._v(" "),s("li",[s("p",[t._v("-0, +, -,等运算")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("var str = '500';")])]),t._v(" "),s("li",[s("code",[t._v("console.log(+str);\t\t 取正")])]),t._v(" "),s("li",[s("code",[t._v("console.log(-str);\t\t 取负")])]),t._v(" "),s("li",[s("code",[t._v("console.log(str - 0);")])])])])]),t._v(" "),s("h4",{attrs:{id:"转换成布尔类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换成布尔类型"}},[t._v("#")]),t._v(" 转换成布尔类型")]),t._v(" "),s("ul",[s("li",[t._v("Boolean()"),s("br"),t._v(" "),s("code",[t._v("0 ''(空字符串) null undefined NaN")]),t._v(" 会转换成false  其它都会转换成true")])]),t._v(" "),s("h4",{attrs:{id:"操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[t._v("#")]),t._v(" 操作符")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("算术运算符"),s("br"),t._v(" "),s("code",[t._v("+ - * / %")])])]),t._v(" "),s("li",[s("p",[t._v("一元运算符\n一元运算符：只有一个操作数的运算符"),s("br"),t._v("\n5 + 6  两个操作数的运算符 二元运算符"),s("br"),t._v("\n++  自身加1"),s("br"),t._v("\n-- 自身减1")])]),t._v(" "),s("li",[s("p",[t._v("前置++")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("后置++")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("总结：\n"),s("ul",[s("li",[t._v("前置++：先加1,后参与运算")]),t._v(" "),s("li",[t._v("后置++：先参与运算,后加1")]),t._v(" "),s("li",[t._v("上面两个理解后,下面两个自通")]),t._v(" "),s("li",[t._v("前置--  ：先减1,后参与运算")]),t._v(" "),s("li",[t._v("后置--  ：先参与运算,后减1")])])])]),t._v(" "),s("h3",{attrs:{id:"逻辑运算符-布尔运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符-布尔运算符"}},[t._v("#")]),t._v(" 逻辑运算符(布尔运算符)")]),t._v(" "),s("ul",[s("li",[t._v("&& 与 两个操作数同时为true,结果为true,否则都是false")]),t._v(" "),s("li",[t._v("|| 或 两个操作数有一个为true,结果为true,否则为false")]),t._v(" "),s("li",[t._v("!  非  取反")])]),t._v(" "),s("h3",{attrs:{id:"关系运算符-比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符-比较运算符"}},[t._v("#")]),t._v(" 关系运算符(比较运算符)")]),t._v(" "),s("p",[s("code",[t._v("< > >= <= == != === !==")]),s("br"),t._v("\n==与===的区别：==只进行值得比较,===类型和值同时相等,则相等")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'55'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \t "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'55'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 值相等"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("类型不相等\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("h3",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("p",[s("code",[t._v("= += -= *= /= %=")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t相当于  num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"运算符的优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[t._v("#")]),t._v(" 运算符的优先级")]),t._v(" "),s("p",[t._v("优先级从高到底")]),t._v(" "),s("ol",[s("li",[t._v("()  优先级最高")]),t._v(" "),s("li",[t._v("一元运算符  ++   --   !")]),t._v(" "),s("li",[t._v("算数运算符  先*  /  %   后 +   -")]),t._v(" "),s("li",[t._v("关系运算符  >   >=   <   <=")]),t._v(" "),s("li",[t._v("相等运算符   ==   !=    ===    !==")]),t._v(" "),s("li",[t._v("逻辑运算符 先&&   后||")]),t._v(" "),s("li",[t._v("赋值运算符")])]),t._v(" "),s("h2",{attrs:{id:"表达式和语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式和语句"}},[t._v("#")]),t._v(" 表达式和语句")]),t._v(" "),s("h3",{attrs:{id:"表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[t._v("#")]),t._v(" 表达式")]),t._v(" "),s("p",[t._v("一个表达式可以产生一个值,有可能是运算、函数调用、有可能是字面量。表达式可以放在任何需要值的地方")]),t._v(" "),s("h3",{attrs:{id:"语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[t._v("#")]),t._v(" 语句")]),t._v(" "),s("p",[t._v("语句可以理解为一个行为,循环语句和判断语句就是典型的语句。一个程序有很多个语句组成,一般情况下;分割一个一个的语句")]),t._v(" "),s("h2",{attrs:{id:"流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),s("h3",{attrs:{id:"顺序结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序结构"}},[t._v("#")]),t._v(" 顺序结构")]),t._v(" "),s("ul",[s("li",[t._v("从上到下执行的代码就是顺序结构")]),t._v(" "),s("li",[t._v("程序默认就是由上到下顺序执行的")])]),t._v(" "),s("h3",{attrs:{id:"分支结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支结构"}},[t._v("#")]),t._v(" 分支结构")]),t._v(" "),s("p",[t._v("根据不同的情况,执行对应代码"),s("br"),t._v("\n语法结构")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     执行语句\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 条件表达式 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     成立执行语句\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     否则执行语句\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     成立执行语句\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     成立执行语句\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     成立执行语句\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     最后默认执行语句\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"循环结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环结构"}},[t._v("#")]),t._v(" 循环结构")]),t._v(" "),s("p",[t._v("循环结构：重复做一件事情")]),t._v(" "),s("h3",{attrs:{id:"三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[t._v("#")]),t._v(" 三元运算符")]),t._v(" "),s("p",[s("code",[t._v("表达式1 ? 表达式2 : 表达式3")]),s("br"),t._v("\n是对"),s("code",[t._v("if……else")]),t._v("语句的一种简化写法"),s("br"),t._v("\n案例：")]),t._v(" "),s("ul",[s("li",[t._v("是否年满18岁")]),t._v(" "),s("li",[t._v("从两个数中找最大值")])]),t._v(" "),s("h3",{attrs:{id:"switch语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch语句"}},[t._v("#")]),t._v(" switch语句")]),t._v(" "),s("p",[t._v("语法格式:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 常量"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 常量"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 常量"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n…\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 常量n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("break")]),t._v("可以省略,如果省略,代码会继续执行下一个case"),s("br"),t._v(" "),s("code",[t._v("switch")]),t._v("语句在比较值时使用的是全等操作符, 因此不会发生类型转换（例如,字符串'10' 不等于数值 10）")]),t._v(" "),s("p",[t._v("案例：")]),t._v(" "),s("ul",[s("li",[t._v("显示星期几")]),t._v(" "),s("li",[t._v("素质教育（把分数变成ABCDE）千万不要写100个case哟")])]),t._v(" "),s("h3",{attrs:{id:"布尔类型的隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型的隐式转换"}},[t._v("#")]),t._v(" 布尔类型的隐式转换")]),t._v(" "),s("ul",[s("li",[t._v("流程控制语句会把后面的值隐式转换成布尔类型")]),t._v(" "),s("li",[t._v("转换为"),s("code",[t._v("true")]),t._v("   非空字符串  非0数字  true 任何对象")]),t._v(" "),s("li",[t._v("转换成"),s("code",[t._v("false")]),t._v(" "),s("code",[t._v("空字符串 0 false null undefined")])])]),t._v(" "),s("p",[t._v("结果是什么？\n"),s("code",[t._v("var a = !!'123';")])]),t._v(" "),s("p",[t._v("var message;\n会自动把message转换成false")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n todo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"循环结构-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环结构-2"}},[t._v("#")]),t._v(" 循环结构")]),t._v(" "),s("p",[t._v("在javascript中,循环语句有三种,"),s("code",[t._v("while、do..while、for")]),t._v("循环。")]),t._v(" "),s("h4",{attrs:{id:"while语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while语句"}},[t._v("#")]),t._v(" while语句")]),t._v(" "),s("p",[t._v("基本语法：")]),t._v(" "),s("ul",[s("li",[t._v("当循环条件为true时,执行循环体,")]),t._v(" "),s("li",[t._v("当循环条件为false时,结束循环。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("循环条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n循环体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"do-while语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-while语句"}},[t._v("#")]),t._v(" do...while语句")]),t._v(" "),s("p",[s("code",[t._v("do..while")]),t._v("循环和"),s("code",[t._v("while")]),t._v("循环非常像,二者经常可以相互替代,但是"),s("code",[t._v("do..while")]),t._v("的特点是不管条件成不成立,都会执行一次"),s("br"),t._v("\n基础语法:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   循环体"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("循环条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n代码示例：\n 初始化变量\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("循环体\n  i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("自增\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("循环条件\n")])])]),s("h3",{attrs:{id:"for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[t._v("#")]),t._v(" for循环")]),t._v(" "),s("p",[t._v("基本语法:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("循环的表达式之间用的是"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("号分隔的"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("千万不要写成"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("初始化表达式"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 判断表达式"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 自增表达式"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   循环体"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("执行顺序：1243  ----  243   -----243(直到循环条件变成false)")]),t._v(" "),s("ol",[s("li",[t._v("初始化表达式")]),t._v(" "),s("li",[t._v("判断表达式")]),t._v(" "),s("li",[t._v("自增表达式")]),t._v(" "),s("li",[t._v("循环体")])]),t._v(" "),s("h3",{attrs:{id:"continue和break"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#continue和break"}},[t._v("#")]),t._v(" continue和break")]),t._v(" "),s("ul",[s("li",[t._v("break:立即跳出整个循环,即循环结束,开始执行循环后面的内容（直接跳到大括号）")]),t._v(" "),s("li",[t._v("continue:立即跳出当前循环,继续下一次循环（跳到i++的地方）")])]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"为什么要学习数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要学习数组"}},[t._v("#")]),t._v(" 为什么要学习数组")]),t._v(" "),s("p",[t._v("之前学习的数据类型,只能存储一个值(比如：Number/String。我们想存储班级中所有学生的姓名,此时该如何存储？")]),t._v(" "),s("h3",{attrs:{id:"数组的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的概念"}},[t._v("#")]),t._v(" 数组的概念")]),t._v(" "),s("p",[t._v("所谓数组,就是将多个元素（通常是同一类型）按一定顺序排列放到一个集合中,那么这个集合我们就称之为数组")]),t._v(" "),s("h3",{attrs:{id:"数组的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的定义"}},[t._v("#")]),t._v(" 数组的定义")]),t._v(" "),s("p",[t._v("数组是一个有序的列表,可以在数组中存放任意的数据,并且数组的长度可以动态的调整")]),t._v(" "),s("h3",{attrs:{id:"通过数组字面量创建数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过数组字面量创建数组"}},[t._v("#")]),t._v(" 通过数组字面量创建数组")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("创建一个空数组\n"),s("code",[t._v("var arr1 = []")])])]),t._v(" "),s("li",[s("p",[t._v("创建一个包含3个数值的数组,多个数组项以逗号隔开"),s("br"),t._v(" "),s("code",[t._v("var arr2 = [1, 3, 4]")])])]),t._v(" "),s("li",[s("p",[t._v("创建一个包含2个字符串的数组"),s("br"),t._v("\nvar arr3 = ['a', 'c']")])]),t._v(" "),s("li",[s("p",[t._v("可以通过数组的length属性获取数组的长度"),s("br"),t._v(" "),s("code",[t._v("console.log(arr3.length);")])])]),t._v(" "),s("li",[s("p",[t._v("可以设置length属性改变数组中元素的个数"),s("br"),t._v(" "),s("code",[t._v("arr3.length = 0")])])])]),t._v(" "),s("h3",{attrs:{id:"获取数组元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取数组元素"}},[t._v("#")]),t._v(" 获取数组元素")]),t._v(" "),s("h4",{attrs:{id:"数组的取值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的取值"}},[t._v("#")]),t._v(" 数组的取值")]),t._v(" "),s("ul",[s("li",[t._v("格式：数组名[下标]\t下标又称索引")]),t._v(" "),s("li",[t._v("功能：获取数组对应下标的那个值,如果下标不存在,则返回"),s("code",[t._v("undefined")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t red\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  blue\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  这个数组的最大下标为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("因此返回"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n")])])]),s("h3",{attrs:{id:"遍历数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历数组"}},[t._v("#")]),t._v(" 遍历数组")]),t._v(" "),s("p",[t._v("遍历：遍及所有,对数组的每一个元素都访问一次就叫遍历")]),t._v(" "),s("p",[t._v("数组遍历的基本语法：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     数组遍历的固定结构\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"数组中新增元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组中新增元素"}},[t._v("#")]),t._v(" 数组中新增元素")]),t._v(" "),s("ul",[s("li",[t._v("数组的赋值\n格式：数组名[下标/索引] = 值;")]),t._v(" "),s("li",[t._v("如果下标有对应的值,会把原来的值覆盖,如果下标不存在,会给数组新增一个元素。\n"),s("code",[t._v('var arr = ["red", "green", "blue"]')])]),t._v(" "),s("li",[t._v('把red替换成了yellow\narr[0] = "yellow"')]),t._v(" "),s("li",[t._v('给数组新增加了一个pink的值\narr[3] = "pink"')])]),t._v(" "),s("h2",{attrs:{id:"函数的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义"}},[t._v("#")]),t._v(" 函数的定义")]),t._v(" "),s("h3",{attrs:{id:"函数声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数声明"}},[t._v("#")]),t._v(" 函数声明")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   函数体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"函数表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数表达式"}},[t._v("#")]),t._v(" 函数表达式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   函数体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"特点："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点："}},[t._v("#")]),t._v(" 特点：")]),t._v(" "),s("ul",[s("li",[t._v("函数声明的时候,函数体并不会执行,只要当函数被调用的时候才会执行。")]),t._v(" "),s("li",[t._v("函数一般都用来干一件事情,需用使用动词+名词,表示做一件事情 "),s("code",[t._v("tellStory")]),t._v(" "),s("code",[t._v("sayHello")]),t._v("等")])]),t._v(" "),s("h3",{attrs:{id:"函数的调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的调用"}},[t._v("#")]),t._v(" 函数的调用")]),t._v(" "),s("p",[t._v("调用函数的语法： 函数名()")]),t._v(" "),s("h4",{attrs:{id:"特点：-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点：-2"}},[t._v("#")]),t._v(" 特点：")]),t._v(" "),s("ul",[s("li",[t._v("函数体只有在调用的时候才会执行,调用需要()进行调用。")]),t._v(" "),s("li",[t._v("可以调用多次(重复使用)")])]),t._v(" "),s("p",[t._v("代码示例:\n声明函数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"吃了没？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("调用函数:\n"),s("code",[t._v("sayHi();")])]),t._v(" "),s("h3",{attrs:{id:"函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[t._v("#")]),t._v(" 函数的参数")]),t._v(" "),s("h4",{attrs:{id:"为什么要有参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有参数"}},[t._v("#")]),t._v(" 为什么要有参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("虽然上面代码可以重复调用,但是只能计算1-100之间的值"),s("br"),t._v("\n如果想要计算n-m之间所有数的和,应该怎么办呢？")]),t._v(" "),s("h4",{attrs:{id:"语法："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法："}},[t._v("#")]),t._v(" 语法：")]),t._v(" "),s("p",[t._v("函数内部是一个封闭的环境,可以通过参数的方式,把外部的值传递给函数内部")]),t._v(" "),s("ul",[s("li",[t._v("带参数的函数声明")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 形参"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n 函数体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("带参数的函数调用\n"),s("code",[t._v("函数名(实参1, 实参2, 实参3);")])])]),t._v(" "),s("h4",{attrs:{id:"形参和实参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#形参和实参"}},[t._v("#")]),t._v(" 形参和实参")]),t._v(" "),s("ul",[s("li",[t._v("形式参数：在声明一个函数的时候,为了函数的功能更加灵活,有些值是固定不了的,对于这些固定不了的值。我们可以给函数设置参数。这个参数没有具体的值,仅仅起到一个占位置的作用,我们通常称之为形式参数,也叫形参。")]),t._v(" "),s("li",[t._v("实际参数：如果函数在声明时,设置了形参,那么在函数调用的时候就需要传入对应的参数,我们把传入的参数叫做实际参数,也叫实参。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("x,y实参,有具体的值。函数执行的时候会把x,y复制一份给函数内部的a和b,函数内部的值是复制的新值,无法修改外部的x,y")]),t._v(" "),s("h3",{attrs:{id:"函数的返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的返回值"}},[t._v("#")]),t._v(" 函数的返回值")]),t._v(" "),s("p",[t._v("当函数执行完的时候,并不是所有时候都要把结果打印。"),s("br"),t._v("\n我们期望函数给我一些反馈（比如计算的结果返回进行后续的运算）,这个时候可以让函数返回一些东西。"),s("br"),t._v("\n也就是返回值。函数通过return返回一个返回值")]),t._v(" "),s("h4",{attrs:{id:"返回值语法："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回值语法："}},[t._v("#")]),t._v(" 返回值语法：")]),t._v(" "),s("p",[t._v("声明一个带返回值的函数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 形参"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  函数体\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 返回值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以通过变量来接收这个返回值"),s("br"),t._v(" "),s("code",[t._v("var 变量 = 函数名(实参1, 实参2, 实参3);")]),s("br"),t._v("\n函数的调用结果就是返回值,因此我们可以直接对函数调用结果进行操作")]),t._v(" "),s("h4",{attrs:{id:"返回值详解："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回值详解："}},[t._v("#")]),t._v(" 返回值详解：")]),t._v(" "),s("ul",[s("li",[t._v("如果函数没有显示的使用 return语句 ,那么函数有默认的返回值：undefined")]),t._v(" "),s("li",[t._v("如果函数使用 return语句,那么跟再return后面的值,就成了函数的返回值")]),t._v(" "),s("li",[t._v("如果函数使用 return语句,但是return后面没有任何值,那么函数的返回值也是：undefined")]),t._v(" "),s("li",[t._v("函数使用return语句后,这个函数会在执行完 return 语句之后停止并立即退出,也就是说return后面的所有其他代码都不会再执行。")]),t._v(" "),s("li",[t._v("推荐的做法是要么让函数始终都返回一个值,要么永远都不要返回值。")])]),t._v(" "),s("h3",{attrs:{id:"函数其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数其它"}},[t._v("#")]),t._v(" 函数其它")]),t._v(" "),s("ul",[s("li",[t._v("匿名函数\n没有名字的函数")])]),t._v(" "),s("p",[t._v("匿名函数如何使用：")]),t._v(" "),s("ul",[s("li",[t._v("将匿名函数赋值给一个变量,这样就可以通过变量进行调用")]),t._v(" "),s("li",[t._v("匿名函数自调用")])]),t._v(" "),s("p",[t._v("关于自执行函数（匿名函数自调用）的作用：防止全局变量污染。")]),t._v(" "),s("ul",[s("li",[t._v("自调用函数\n匿名函数不能通过直接调用来执行,因此可以通过匿名函数的自调用的方式来执行")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"函数是一种数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数是一种数据类型"}},[t._v("#")]),t._v(" 函数是一种数据类型")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"函数作为参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数作为参数"}},[t._v("#")]),t._v(" 函数作为参数")]),t._v(" "),s("p",[t._v("因为函数也是一种类型,可以把函数作为两一个函数的参数,在两一个函数中调用")]),t._v(" "),s("h3",{attrs:{id:"函数做为返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数做为返回值"}},[t._v("#")]),t._v(" 函数做为返回值")]),t._v(" "),s("p",[t._v("因为函数是一种类型,所以可以把函数可以作为返回值从函数内部返回,这种用法在后面很常见")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"代码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码规范"}},[t._v("#")]),t._v(" 代码规范")]),t._v(" "),s("ol",[s("li",[t._v("命名规范")]),t._v(" "),s("li",[t._v("变量规范"),s("br"),t._v("\nvar name = 'zs';")]),t._v(" "),s("li",[t._v("注释规范"),s("br"),t._v("\n这里是注释")]),t._v(" "),s("li",[t._v("空格规范")]),t._v(" "),s("li",[t._v("换行规范")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),s("h2",{attrs:{id:"作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),s("p",[t._v("作用域：变量可以起作用的范围")]),t._v(" "),s("h3",{attrs:{id:"全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),s("p",[t._v("在任何地方都可以访问到的变量就是全局变量,对应全局作用域")]),t._v(" "),s("h3",{attrs:{id:"局部变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部变量"}},[t._v("#")]),t._v(" 局部变量")]),t._v(" "),s("p",[t._v("只在固定的代码片段内可访问到的变量,最常见的例如函数内部。对应局部作用域(函数作用域)")]),t._v(" "),s("ul",[s("li",[t._v("不使用var声明的变量是全局变量,不推荐使用。")]),t._v(" "),s("li",[t._v("变量退出作用域之后会销毁,全局变量关闭网页或浏览器才会销毁")])]),t._v(" "),s("h3",{attrs:{id:"块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),s("ul",[s("li",[t._v("任何一对花括号{ 和 }中的语句集都属于一个块,在这之中定义的所有变量在代码块外都是不可见的,我们称之为块级作用域。")]),t._v(" "),s("li",[t._v("在es5之前没有块级作用域的的概念,只有函数作用域,现阶段可以认为JavaScript没有块级作用域")])]),t._v(" "),s("h3",{attrs:{id:"词法作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[t._v("#")]),t._v(" 词法作用域")]),t._v(" "),s("ul",[s("li",[t._v("变量的作用域是在定义时决定而不是执行时决定,也就是说词法作用域取决于源码,")]),t._v(" "),s("li",[t._v("通过静态分析就能确定,因此词法作用域也叫做静态作用域。")])]),t._v(" "),s("h3",{attrs:{id:"在js中词法作用域规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在js中词法作用域规则"}},[t._v("#")]),t._v(" 在js中词法作用域规则:")]),t._v(" "),s("ul",[s("li",[t._v("函数允许访问函数外的数据.")]),t._v(" "),s("li",[t._v("整个代码结构中只有函数可以限定作用域.")]),t._v(" "),s("li",[t._v("作用域规则首先使用提升规则分析")]),t._v(" "),s("li",[t._v("如果当前作用规则中有名字了, 就不考虑外面的名字")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),s("h3",{attrs:{id:"什么是对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是对象"}},[t._v("#")]),t._v(" 什么是对象")]),t._v(" "),s("ul",[s("li",[t._v("现实生活中：万物皆对象,对象是一个具体的事物,一个具体的事物就会有行为和特征。")]),t._v(" "),s("li",[t._v("举例： 一部车,一个手机")]),t._v(" "),s("li",[t._v("车是一类事物,门口停的那辆车才是对象")]),t._v(" "),s("li",[t._v("特征：红色、四个轮子")]),t._v(" "),s("li",[t._v("行为：驾驶、刹车")])]),t._v(" "),s("h3",{attrs:{id:"javascript中的对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的对象"}},[t._v("#")]),t._v(" JavaScript中的对象")]),t._v(" "),s("ul",[s("li",[t._v("JavaScript中的对象其实就是生活中对象的一个抽象")]),t._v(" "),s("li",[t._v("JavaScript的对象是无序属性的集合。")]),t._v(" "),s("li",[t._v("其属性可以包含基本值、对象或函数。对象就是一组没有顺序的值。我们可以把JavaScript中的对象想象成键值对,其中值可以是数据和函数。")])]),t._v(" "),s("h3",{attrs:{id:"对象的行为和特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的行为和特征"}},[t._v("#")]),t._v(" 对象的行为和特征")]),t._v(" "),s("ul",[s("li",[t._v("特征---属性")]),t._v(" "),s("li",[t._v("行为---方法")]),t._v(" "),s("li",[t._v("事物的特征在对象中用属性来表示。")]),t._v(" "),s("li",[t._v("事物的行为在对象中用方法来表示。")])]),t._v(" "),s("h3",{attrs:{id:"对象创建方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象创建方式"}},[t._v("#")]),t._v(" 对象创建方式")]),t._v(" "),s("ul",[s("li",[t._v("对象字面量")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHi")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("new Object()创建对象")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lisi'")]),t._v("\n  person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),t._v("\n  person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'actor'")]),t._v("\n  person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHi")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello,everyBody'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"对象的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的使用"}},[t._v("#")]),t._v(" 对象的使用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("遍历对象的属性")]),t._v(" "),s("ul",[s("li",[t._v("通过for..in语法可以遍历一个对象")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("删除对象的属性")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mm'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"简单类型和复杂类型的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单类型和复杂类型的区别"}},[t._v("#")]),t._v(" 简单类型和复杂类型的区别")]),t._v(" "),s("ul",[s("li",[t._v("基本类型又叫做值类型,复杂类型又叫做引用类型")]),t._v(" "),s("li",[t._v("值类型：简单数据类型,基本数据类型,在存储时,变量中存储的是值本身,因此叫做值类型。")]),t._v(" "),s("li",[t._v("引用类型：复杂数据类型,在存储是,变量中存储的仅仅是地址（引用）,因此叫做引用数据类型。")])]),t._v(" "),s("h2",{attrs:{id:"内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置对象"}},[t._v("#")]),t._v(" 内置对象")]),t._v(" "),s("ul",[s("li",[t._v("JavaScript中的对象分为3种：内置对象、浏览器对象、自定义对象")]),t._v(" "),s("li",[t._v("JavaScript 提供多个内置对象：Math/Array/Number/String/Boolean...")]),t._v(" "),s("li",[t._v("对象只是带有"),s("strong",[t._v("属性")]),t._v("和"),s("strong",[t._v("方法")]),t._v("的特殊数据类型。")]),t._v(" "),s("li",[t._v("学习一个内置对象的使用,只要学会其常用的成员的使用（通过查文档学习）")]),t._v(" "),s("li",[t._v("可以通过MDN/W3C来查询")]),t._v(" "),s("li",[t._v("内置对象的方法很多,我们只需要知道内置对象提供的常用方法,使用的时候查询文档。")])]),t._v(" "),s("h3",{attrs:{id:"math对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math对象"}},[t._v("#")]),t._v(" Math对象")]),t._v(" "),s("ul",[s("li",[t._v("Math对象不是构造函数,它具有数学常数和函数的属性和方法,都是以静态成员的方式提供")]),t._v(" "),s("li",[t._v("跟数学相关的运算来找Math中的成员（求绝对值,取整）")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v("\t\t\t\t\t\t 圆周率\nMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t 生成随机数\nMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ceil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t  向下取整"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("向上取整\nMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t 取整"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("四舍五入\nMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t 绝对值\nMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t  求最大和最小值\nMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t  正弦"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("余弦\nMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("power")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t  求指数次幂"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("求平方根\n")])])]),s("h3",{attrs:{id:"date对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date对象"}},[t._v("#")]),t._v(" Date对象")]),t._v(" "),s("ul",[s("li",[t._v("创建Date实例用来处理日期和时间。Date 对象基于1970年1月1日（世界标准时间）起的毫秒数")]),t._v(" "),s("li",[t._v("获取当前时间,UTC世界时间,距1970年1月1日（世界标准时间）起的毫秒数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" now "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t 获取距"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1970")]),t._v("年"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("月"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("日（世界标准时间）起的毫秒数\n")])])]),s("h3",{attrs:{id:"date构造函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date构造函数的参数"}},[t._v("#")]),t._v(" Date构造函数的参数")]),t._v(" "),s("ol",[s("li",[t._v("毫秒数 1498099000356\t\t"),s("code",[t._v("new Date(1498099000356)")])]),t._v(" "),s("li",[t._v("日期格式字符串  '2015-5-1'\t "),s("code",[t._v("new Date('2015-5-1')")])]),t._v(" "),s("li",[t._v("年、月、日……\t\t\t\t  "),s("code",[t._v("new Date(2015, 4, 1) 月份从0开始")])])]),t._v(" "),s("h3",{attrs:{id:"获取日期的毫秒形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取日期的毫秒形式"}},[t._v("#")]),t._v(" 获取日期的毫秒形式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" now "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvalueOf用于获取对象的原始值\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("HTML5中提供的方法,有兼容性问题"),s("br"),t._v(" "),s("code",[t._v("var now = Date.now();")])]),t._v(" "),s("p",[t._v("不支持HTML5的浏览器,可以用下面这种方式"),s("br"),t._v(" "),s("code",[t._v("var now = + new Date();\t\t\t 调用 Date对象的valueOf()")])]),t._v(" "),s("h3",{attrs:{id:"日期格式化方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期格式化方法"}},[t._v("#")]),t._v(" 日期格式化方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("toString()")]),t._v("\t\t转换成字符串")]),t._v(" "),s("li",[s("code",[t._v("valueOf()")]),t._v("\t 获取毫秒值")]),t._v(" "),s("li",[t._v("下面格式化日期的方法,在不同浏览器可能表现不一致,一般不用\n"),s("ul",[s("li",[s("code",[t._v("toDateString()")])]),t._v(" "),s("li",[s("code",[t._v("toTimeString()")])]),t._v(" "),s("li",[s("code",[t._v("toLocaleDateString()")])]),t._v(" "),s("li",[s("code",[t._v("toLocaleTimeString()")])])])])]),t._v(" "),s("h3",{attrs:{id:"获取日期指定部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取日期指定部分"}},[t._v("#")]),t._v(" 获取日期指定部分")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("getTime()")]),t._v(" \t   返回毫秒数和valueOf()结果一样,valueOf()内部调用的getTime()")]),t._v(" "),s("li",[s("code",[t._v("getMilliseconds()")])]),t._v(" "),s("li",[s("code",[t._v("getSeconds()")]),t._v("   返回0-59")]),t._v(" "),s("li",[s("code",[t._v("getMinutes()")]),t._v("  返回0-59")]),t._v(" "),s("li",[s("code",[t._v("getHours()")]),t._v("     返回0-23")]),t._v(" "),s("li",[s("code",[t._v("getDay()")]),t._v("      返回星期几 0周日   6周6")]),t._v(" "),s("li",[s("code",[t._v("getDate()")]),t._v("     返回当前月的第几天")]),t._v(" "),s("li",[s("code",[t._v("getMonth()")]),t._v("     返回月份,"),s("em",[s("strong",[t._v("从0开始")])])]),t._v(" "),s("li",[s("code",[t._v("getFullYear()")]),t._v(" 返回4位的年份  如 2016")])]),t._v(" "),s("h2",{attrs:{id:"array对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array对象"}},[t._v("#")]),t._v(" Array对象")]),t._v(" "),s("p",[t._v("创建数组对象的两种方式")]),t._v(" "),s("h3",{attrs:{id:"字面量方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量方式"}},[t._v("#")]),t._v(" 字面量方式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("new Array()\n使用构造函数创建数组对象")]),t._v(" "),s("ul",[s("li",[t._v("创建了一个空数组\n"),s("code",[t._v("var arr = new Array()")])]),t._v(" "),s("li",[t._v("创建了一个数组,里面存放了3个字符串\n"),s("code",[t._v("var arr = new Array('zs', 'ls', 'ww')")])]),t._v(" "),s("li",[t._v("创建了一个数组,里面存放了4个数字\n"),s("code",[t._v("var arr = new Array(1, 2, 3, 4)")])])])]),t._v(" "),s("li",[s("p",[t._v("使用字面量创建数组对象\n"),s("code",[t._v("var arr = [1, 2, 3]")]),s("br"),t._v("\n获取数组中元素的个数\n"),s("code",[t._v("console.log(arr.length)")])])]),t._v(" "),s("li",[s("p",[t._v("检测一个对象是否是数组")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("instanceof")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Array.isArray()")]),t._v("\n函数的参数,如果要求是一个数组的话,可以用这种方式来进行判断")])]),t._v(" "),s("li",[s("p",[t._v("toString()/valueOf()")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("toString()")]),t._v("\t\t把数组转换成字符串,逗号分隔每一项")]),t._v(" "),s("li",[s("code",[t._v("valueOf()")]),t._v("         返回数组对象本身")])])])])])]),t._v(" "),s("h2",{attrs:{id:"数组常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组常用方法"}},[t._v("#")]),t._v(" 数组常用方法")]),t._v(" "),s("p",[t._v("演示："),s("code",[t._v("push()、shift()、unshift()、reverse()、sort()、splice()、indexOf()")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("push()")]),t._v(": 往数组最后一项添加元素,改变原数组")]),t._v(" "),s("li",[s("code",[t._v("pop()")]),t._v(": 删除数组最后一项元素,改变原数组")]),t._v(" "),s("li",[s("code",[t._v("shift()")]),t._v(": 往数组第一项添加元素,改变原数组")]),t._v(" "),s("li",[s("code",[t._v("unshift()")]),t._v(": 删除数组第一项元素,改变原数组")]),t._v(" "),s("li",[s("code",[t._v("reverse()")]),t._v(": 翻转数组")]),t._v(" "),s("li",[s("code",[t._v("sort()")]),t._v(": 即使是数组sort也是根据字符,从小到大排序")]),t._v(" "),s("li",[s("code",[t._v("concat()")]),t._v(":把参数拼接到当前数组")]),t._v(" "),s("li",[s("code",[t._v("slice()")]),t._v(": 从当前数组中截取一个新的数组,不影响原来的数组,参数start从0开始,end从1开始")]),t._v(" "),s("li",[s("code",[t._v("splice()")]),t._v(": 删除或替换当前数组的某些项目,参数start, deleteCount, options(要替换的项目)")]),t._v(" "),s("li",[s("code",[t._v("indexOf()")]),t._v("、"),s("code",[t._v("lastIndexOf()")]),t._v(": 查找数组元素,如果找到就返回改元素第一次出现的下标,如果没找到返回-1")]),t._v(" "),s("li",[s("code",[t._v("every()")]),t._v(": 如果数组所有元素都满足规定条件,则返回true,如果有一个元素不满足条件,则返回false,参数为一个回调函数,回调函数里面传3个参数")]),t._v(" "),s("li",[s("code",[t._v("some()")]),t._v(": 如果数组所有元素有一个满足规定条件,则返回true,如果所有元素都不满足条件,则返回false,参数为一个回调函数,回调函数里面传3个参数")]),t._v(" "),s("li",[s("code",[t._v("filter()")]),t._v(": 返回满足条件元素的新数组,参数为一个回调函数,回调函数里面传3个参数")]),t._v(" "),s("li",[s("code",[t._v("forEach()")]),t._v("、"),s("code",[t._v("map()")]),t._v(": 循环数组,map有返回值")]),t._v(" "),s("li",[s("code",[t._v("join()")]),t._v(":方法将数组的所有元素连接到一个字符串中。")])]),t._v(" "),s("h3",{attrs:{id:"清空数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清空数组"}},[t._v("#")]),t._v(" 清空数组")]),t._v(" "),s("ul",[s("li",[t._v("方式1 推荐\n"),s("code",[t._v("arr = [];")])]),t._v(" "),s("li",[t._v("方式2\n"),s("code",[t._v("arr.length = 0;")])]),t._v(" "),s("li",[t._v("方式3\n"),s("code",[t._v("arr.splice(0, arr.length)")])])]),t._v(" "),s("h2",{attrs:{id:"基本包装类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本包装类型"}},[t._v("#")]),t._v(" 基本包装类型")]),t._v(" "),s("p",[t._v("为了方便操作基本数据类型,JavaScript还提供了三个特殊的引用类型：String/Number/Boolean")]),t._v(" "),s("ul",[s("li",[t._v("创建基本包装类型的对象")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \t\t\t\t数值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("基本类型\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t类型转换\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t基本包装类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("对象\nNumber和Boolean基本包装类型基本不用"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("使用的话可能会引起歧义。例如：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t 结果是什么\n")])])]),s("h3",{attrs:{id:"string对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string对象"}},[t._v("#")]),t._v(" String对象")]),t._v(" "),s("p",[t._v("字符串的不可变")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("当重新给str赋值的时候,常量'abc'不会被修改,依然在内存中")]),t._v(" "),s("li",[t._v("重新给字符串赋值,会重新在内存中开辟空间,这个特点就是字符串的不可变")]),t._v(" "),s("li",[t._v("由于字符串的不可变,在大量拼接字符串的时候会有效率问题")])]),t._v(" "),s("h4",{attrs:{id:"创建字符串对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建字符串对象"}},[t._v("#")]),t._v(" 创建字符串对象")]),t._v(" "),s("p",[s("code",[t._v("var str = new String('Hello World')")]),s("br"),t._v("\n获取字符串中字符的个数:\n"),s("code",[t._v("console.log(str.length)")])]),t._v(" "),s("h3",{attrs:{id:"字符串对象的常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串对象的常用方法"}},[t._v("#")]),t._v(" 字符串对象的常用方法")]),t._v(" "),s("p",[t._v("字符串所有的方法,都不会修改字符串本身(字符串是不可变的),操作完成会返回一个新的字符串")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("charAt()")]),t._v(": 获取指定位置处字符")]),t._v(" "),s("li",[s("code",[t._v("charCodeAt()")]),t._v(": 获取指定位置处字符的ASCII码")]),t._v(" "),s("li",[s("code",[t._v("concat()")]),t._v(": 拼接字符串,等效于+,+更常用")]),t._v(" "),s("li",[s("code",[t._v("slice()")]),t._v(": 从start位置开始,截取到end位置,end取不到")]),t._v(" "),s("li",[s("code",[t._v("substring()")]),t._v(": 从start位置开始,截取到end位置,end取不到")]),t._v(" "),s("li",[s("code",[t._v("substr()")]),t._v(": 从start位置开始,截取length个字符")]),t._v(" "),s("li",[s("code",[t._v("indexOf()")]),t._v(": 返回指定内容在元字符串中的位置")]),t._v(" "),s("li",[s("code",[t._v("lastIndexOf()")]),t._v(": 从后往前找,只找第一个匹配的")]),t._v(" "),s("li",[s("code",[t._v("trim()")]),t._v(": 只能去除字符串前后的空白")]),t._v(" "),s("li",[s("code",[t._v("to(Locale)UpperCase()")]),t._v(": 转换大写")]),t._v(" "),s("li",[s("code",[t._v("to(Locale)LowerCase()")]),t._v(": 转换小写")]),t._v(" "),s("li",[s("code",[t._v("search()")]),t._v(": 查找字符串,返回第一个与传入字符相匹配的子串的起始位置。")]),t._v(" "),s("li",[s("code",[t._v("replace()")]),t._v(": 替换字符串,第一个参数为被替换的字符,第二个参数为要替换的字符")]),t._v(" "),s("li",[s("code",[t._v("split()")]),t._v(": 分割字符串,参数为分割的符号")])])])}),[],!1,null,null,null);a.default=r.exports}}]);